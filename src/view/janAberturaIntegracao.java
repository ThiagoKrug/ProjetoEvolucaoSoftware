package view;

import br.com.model.dao.AberturaDao;
import br.com.model.dao.CandidatoDao;
import br.com.model.dao.CronogramaDao;
import br.com.model.entity.Abertura;
import br.com.model.entity.Candidato;
import br.com.model.entity.Concurso;
import br.com.model.entity.Cronograma;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.Datas;

/**
 *
 * @author Jader
 */
public class janAberturaIntegracao extends javax.swing.JFrame {

    private Abertura abertura = new Abertura();
    private Concurso concurso;
    ArrayList<Candidato> candidatosAptos = new ArrayList();
    List<Candidato> candidato = null;

    /**
     * Creates new form janAbertura
     */
    public janAberturaIntegracao() {
        concurso = janMenu.CONCURSO;
        initComponents();
        this.setsFields();
    }

    private void setsFields() {
        Concurso concurso = janMenu.CONCURSO;
        if (concurso != null) {
            // dados gerais
            abertura = concurso.getAbertura();
            if (abertura != null) {
                jTextFieldHoraInstalacao.setText(Datas.getTimeNoSecond(abertura.getHoraInicio()));
                jTextFieldLocalSessao.setText(abertura.getLocal());
                jTextPortariaNomeacao.setText(abertura.getPortaria());
                jTextFieldEmissorPortaria.setText(abertura.getEmissor());

                // Cronograma
                this.preecheTabelaCronograma();
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldEdital = new javax.swing.JTextField();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jButtonCancelar = new javax.swing.JButton();
        jButtonProximo = new javax.swing.JButton();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanelInstalacao = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        horadeinicio = new javax.swing.JLabel();
        textoajudaemissor = new javax.swing.JLabel();
        jTextFieldLocalSessao = new javax.swing.JTextField();
        jTextFieldEmissorPortaria = new javax.swing.JTextField();
        EmissorPortaria = new javax.swing.JLabel();
        LocalSessao = new javax.swing.JLabel();
        textoAjudaLocalSessao = new javax.swing.JLabel();
        PortariaNomeacao = new javax.swing.JLabel();
        textoajudaPortaria = new javax.swing.JLabel();
        jTextPortariaNomeacao = new javax.swing.JTextField();
        jButtonCriarAta = new javax.swing.JButton();
        jTextFieldHoraInstalacao = new javax.swing.JTextField();
        jButtonGravar = new javax.swing.JButton();
        jPanelCronograma = new javax.swing.JPanel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCronogramaAbertura = new javax.swing.JTable();
        jButtonCronograma = new javax.swing.JButton();
        jTextFieldAtividade = new javax.swing.JTextField();
        jDateChooserData = new com.toedter.calendar.JDateChooser();
        jFormattedTextFieldHora = new javax.swing.JFormattedTextField();
        jTextFieldLocal = new javax.swing.JTextField();
        jButtonAdicionaAtividade = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jButtonRemoveAtividade = new javax.swing.JButton();
        jPanelCandidato = new javax.swing.JPanel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        marqueoscadidatos = new javax.swing.JLabel();
        horadeinicio2 = new javax.swing.JLabel();
        CriarAtaAbertura = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCandidatosPresentesAbertura = new javax.swing.JList();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListCandidatos = new javax.swing.JList();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        jButtonRemoveTodosCandidatos = new javax.swing.JButton();
        jButtonAdicionaCandidato = new javax.swing.JButton();
        jButtonAdicionaTodosCandidatos = new javax.swing.JButton();
        jButtonRemoveCandidato = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonVoltar = new javax.swing.JButton();

        jTextFieldEdital.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Abertura");
        setResizable(false);

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/cancel.png"))); // NOI18N
        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jButtonCancelar.setBounds(210, 550, 120, 40);
        jLayeredPane1.add(jButtonCancelar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonProximo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/next.png"))); // NOI18N
        jButtonProximo.setMnemonic('p');
        jButtonProximo.setText("Próximo");
        jButtonProximo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });
        jButtonProximo.setBounds(330, 550, 120, 40);
        jLayeredPane1.add(jButtonProximo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTabbedPane5.setToolTipText("");
        jTabbedPane5.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane5FocusGained(evt);
            }
        });

        horadeinicio.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        horadeinicio.setText("Hora de início da sessão de instalação da comissão examinadora:");
        horadeinicio.setBounds(60, 50, 420, 17);
        jLayeredPane2.add(horadeinicio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textoajudaemissor.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        textoajudaemissor.setText("Exemplo: \"Reitora da Universidade Federal do Pampa\" (esta informação constará na ata)");
        textoajudaemissor.setBounds(60, 290, 410, 20);
        jLayeredPane2.add(textoajudaemissor, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextFieldLocalSessao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldLocalSessao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLocalSessaoActionPerformed(evt);
            }
        });
        jTextFieldLocalSessao.setBounds(60, 150, 340, 30);
        jLayeredPane2.add(jTextFieldLocalSessao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextFieldEmissorPortaria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextFieldEmissorPortaria.setBounds(60, 320, 340, 30);
        jLayeredPane2.add(jTextFieldEmissorPortaria, javax.swing.JLayeredPane.DEFAULT_LAYER);

        EmissorPortaria.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        EmissorPortaria.setText("Emissor da portaria de nomeação da banca");
        EmissorPortaria.setBounds(60, 270, 380, 17);
        jLayeredPane2.add(EmissorPortaria, javax.swing.JLayeredPane.DEFAULT_LAYER);

        LocalSessao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LocalSessao.setText("Local da sessão de instalação da comissão examinadora");
        LocalSessao.setBounds(60, 110, 380, 17);
        jLayeredPane2.add(LocalSessao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textoAjudaLocalSessao.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        textoAjudaLocalSessao.setText("Exemplo: sala cento e doze do Campus Alegrete");
        textoAjudaLocalSessao.setBounds(60, 130, 220, 13);
        jLayeredPane2.add(textoAjudaLocalSessao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        PortariaNomeacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        PortariaNomeacao.setText("Portaria de nomeação da banca");
        PortariaNomeacao.setBounds(60, 190, 380, 17);
        jLayeredPane2.add(PortariaNomeacao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        textoajudaPortaria.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        textoajudaPortaria.setText("Exemplo: 005/2008(esta informação constará na ata)");
        textoajudaPortaria.setBounds(60, 210, 260, 20);
        jLayeredPane2.add(textoajudaPortaria, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextPortariaNomeacao.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextPortariaNomeacao.setBounds(60, 230, 90, 30);
        jLayeredPane2.add(jTextPortariaNomeacao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonCriarAta.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonCriarAta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/ataa.png"))); // NOI18N
        jButtonCriarAta.setText("Cria ata de instalação da comissão examinadora");
        jButtonCriarAta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCriarAtaActionPerformed(evt);
            }
        });
        jButtonCriarAta.setBounds(50, 420, 390, 40);
        jLayeredPane2.add(jButtonCriarAta, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldHoraInstalacao.setBounds(60, 70, 70, 30);
        jLayeredPane2.add(jTextFieldHoraInstalacao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGravar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonGravar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/save2.png"))); // NOI18N
        jButtonGravar.setMnemonic('v');
        jButtonGravar.setText("Gravar");
        jButtonGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGravarActionPerformed(evt);
            }
        });
        jButtonGravar.setBounds(320, 370, 120, 40);
        jLayeredPane2.add(jButtonGravar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanelInstalacaoLayout = new javax.swing.GroupLayout(jPanelInstalacao);
        jPanelInstalacao.setLayout(jPanelInstalacaoLayout);
        jPanelInstalacaoLayout.setHorizontalGroup(
            jPanelInstalacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInstalacaoLayout.createSequentialGroup()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanelInstalacaoLayout.setVerticalGroup(
            jPanelInstalacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Instalação", jPanelInstalacao);

        jTableCronogramaAbertura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Atividade", "Data", "Horário", "Local"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableCronogramaAbertura.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jTableCronogramaAbertura);

        jScrollPane2.setBounds(30, 230, 460, 160);
        jLayeredPane3.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonCronograma.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonCronograma.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/cronograma.png"))); // NOI18N
        jButtonCronograma.setText("Cria Cronograma");
        jButtonCronograma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCronogramaActionPerformed(evt);
            }
        });
        jButtonCronograma.setBounds(70, 410, 370, 40);
        jLayeredPane3.add(jButtonCronograma, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldAtividade.setBounds(90, 30, 280, 30);
        jLayeredPane3.add(jTextFieldAtividade, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDateChooserData.setBounds(90, 80, 150, 30);
        jLayeredPane3.add(jDateChooserData, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFormattedTextFieldHora.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldHora.setBounds(260, 80, 100, 30);
        jLayeredPane3.add(jFormattedTextFieldHora, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldLocal.setBounds(90, 130, 280, 30);
        jLayeredPane3.add(jTextFieldLocal, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionaAtividade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/add.png"))); // NOI18N
        jButtonAdicionaAtividade.setMnemonic('a');
        jButtonAdicionaAtividade.setText("Adicionar");
        jButtonAdicionaAtividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionaAtividadeActionPerformed(evt);
            }
        });
        jButtonAdicionaAtividade.setBounds(100, 180, 110, 30);
        jLayeredPane3.add(jButtonAdicionaAtividade, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel21.setText("Atividade:");
        jLabel21.setBounds(90, 10, 120, 17);
        jLayeredPane3.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel22.setText("Local:");
        jLabel22.setBounds(90, 110, 41, 17);
        jLayeredPane3.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel23.setText("Data:");
        jLabel23.setBounds(90, 60, 34, 17);
        jLayeredPane3.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel24.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel24.setText("Hora:");
        jLabel24.setBounds(260, 60, 34, 17);
        jLayeredPane3.add(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoveAtividade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/remove.png"))); // NOI18N
        jButtonRemoveAtividade.setMnemonic('r');
        jButtonRemoveAtividade.setText("Remover");
        jButtonRemoveAtividade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveAtividadeActionPerformed(evt);
            }
        });
        jButtonRemoveAtividade.setBounds(240, 180, 110, 30);
        jLayeredPane3.add(jButtonRemoveAtividade, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanelCronogramaLayout = new javax.swing.GroupLayout(jPanelCronograma);
        jPanelCronograma.setLayout(jPanelCronogramaLayout);
        jPanelCronogramaLayout.setHorizontalGroup(
            jPanelCronogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
        jPanelCronogramaLayout.setVerticalGroup(
            jPanelCronogramaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Cronograma", jPanelCronograma);

        marqueoscadidatos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        marqueoscadidatos.setText("Selecione os candidatos presentes na sessão de abertura do concurso:");
        marqueoscadidatos.setBounds(50, 10, 450, 17);
        jLayeredPane4.add(marqueoscadidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        horadeinicio2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        horadeinicio2.setText("Hora de início da sessão de instalação da comissão examinadora:");
        horadeinicio2.setBounds(50, 360, 420, 17);
        jLayeredPane4.add(horadeinicio2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        CriarAtaAbertura.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        CriarAtaAbertura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/ataa.png"))); // NOI18N
        CriarAtaAbertura.setText("Criar ata da sessão de abertura do concurso");
        CriarAtaAbertura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CriarAtaAberturaActionPerformed(evt);
            }
        });
        CriarAtaAbertura.setBounds(80, 420, 360, 40);
        jLayeredPane4.add(CriarAtaAbertura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosPresentesAbertura.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListCandidatosPresentesAbertura);

        jScrollPane1.setBounds(300, 70, 170, 270);
        jLayeredPane4.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jListCandidatos);

        jScrollPane4.setBounds(20, 70, 170, 270);
        jLayeredPane4.add(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jFormattedTextField1.setBounds(50, 380, 70, 30);
        jLayeredPane4.add(jFormattedTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoveTodosCandidatos.setText("<<");
        jButtonRemoveTodosCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveTodosCandidatosActionPerformed(evt);
            }
        });
        jButtonRemoveTodosCandidatos.setBounds(220, 230, 60, 30);
        jLayeredPane4.add(jButtonRemoveTodosCandidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionaCandidato.setText(">");
        jButtonAdicionaCandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionaCandidatoActionPerformed(evt);
            }
        });
        jButtonAdicionaCandidato.setBounds(220, 110, 60, 30);
        jLayeredPane4.add(jButtonAdicionaCandidato, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionaTodosCandidatos.setText(">>");
        jButtonAdicionaTodosCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionaTodosCandidatosActionPerformed(evt);
            }
        });
        jButtonAdicionaTodosCandidatos.setBounds(220, 150, 60, 30);
        jLayeredPane4.add(jButtonAdicionaTodosCandidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoveCandidato.setText("<");
        jButtonRemoveCandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveCandidatoActionPerformed(evt);
            }
        });
        jButtonRemoveCandidato.setBounds(220, 190, 60, 30);
        jLayeredPane4.add(jButtonRemoveCandidato, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Candidatos Presentes");
        jLabel2.setBounds(300, 40, 160, 30);
        jLayeredPane4.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setText("Lista de Candidatos:");
        jLabel3.setBounds(20, 40, 160, 30);
        jLayeredPane4.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanelCandidatoLayout = new javax.swing.GroupLayout(jPanelCandidato);
        jPanelCandidato.setLayout(jPanelCandidatoLayout);
        jPanelCandidatoLayout.setHorizontalGroup(
            jPanelCandidatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 515, Short.MAX_VALUE)
        );
        jPanelCandidatoLayout.setVerticalGroup(
            jPanelCandidatoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Abertura", jPanelCandidato);

        jTabbedPane5.setBounds(0, 50, 520, 500);
        jLayeredPane1.add(jTabbedPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Abertura");
        jLabel1.setBounds(220, 10, 100, 29);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonVoltar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/back.png"))); // NOI18N
        jButtonVoltar.setMnemonic('v');
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });
        jButtonVoltar.setBounds(90, 550, 120, 40);
        jLayeredPane1.add(jButtonVoltar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-536)/2, (screenSize.height-642)/2, 536, 642);
    }// </editor-fold>//GEN-END:initComponents

    private void preecheTabelaCronograma() {

        CronogramaDao cronogramaDao = new CronogramaDao();
        List<Cronograma> cronogramas = null;
        try {
            cronogramas = cronogramaDao.pesquisarPorIdConcurso(abertura.getIdConcurso());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        DefaultTableModel dtm = new DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "id", "Atividade", "Data", "Horário", "Local"
                }) {
            Class[] types = new Class[]{
                String.class, String.class, String.class, String.class, String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
            }
        };
        for (Cronograma cronograma : cronogramas) {
            dtm.addRow(new Object[]{
                        cronograma.getIdCronograma(),
                        cronograma.getAtividade(),
                        Datas.getDate(cronograma.getData()),
                        Datas.getTimeNoSecond(cronograma.getHorario()),
                        cronograma.getLocal()
                    });
        }
        jTableCronogramaAbertura.setModel(dtm);

    }
    private void jButtonCriarAtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCriarAtaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCriarAtaActionPerformed

    private void jTextFieldLocalSessaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLocalSessaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLocalSessaoActionPerformed

    private void jButtonCronogramaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCronogramaActionPerformed
    }//GEN-LAST:event_jButtonCronogramaActionPerformed

    private void CriarAtaAberturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CriarAtaAberturaActionPerformed
    }//GEN-LAST:event_CriarAtaAberturaActionPerformed

    private void jButtonGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGravarActionPerformed
        /* Date HoraInicio = Datas.convertStringToTime(jTextFieldHoraInstalacao.getText());
         abertura.setHoraInicio(HoraInicio);
         abertura.setLocal(jTextFieldLocalSessao.getText());
         abertura.setPortaria(jTextPortariaNomeacao.getText());
         abertura.setEmissor(jTextFieldEmissorPortaria.getText());
         abertura.setIdConcurso(1);

         AberturaDao aberturaDao = new AberturaDao();
         try {
         aberturaDao.inserir(abertura);
         } catch (SQLException ex) {
         Logger.getLogger(janAbertura.class.getName()).log(Level.SEVERE, null, ex);
         }*/
        this.salvaDadosGerais();

    }//GEN-LAST:event_jButtonGravarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed
        /*Component component = jTabbedPane5.getSelectedComponent();
         if (component == jPanelInstalacao) {
         //concurso.setMinisterio(jTextFieldMinisterio.getText());
         } else if (component == jPanelCronograma) {
         //            jcom
         //            pres.setSexo(null);
         //            Examinador presidente = new Examinador();
         //            presidente.set
         //            
         //            BancaExaminadora bancaExaminadora = new BancaExaminadora();
         //            bancaExaminadora.
         } else if (component == jPanelCandidato) {
         } else {
         */
        int nextTab = jTabbedPane5.getSelectedIndex() + 1;
        if (nextTab < jTabbedPane5.getTabCount()) {
            jTabbedPane5.setSelectedIndex(nextTab);
        }
    }//GEN-LAST:event_jButtonProximoActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        int nextTab = jTabbedPane5.getSelectedIndex() - 1;
        if (nextTab < jTabbedPane5.getTabCount()) {
            jTabbedPane5.setSelectedIndex(nextTab);
        }
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jTabbedPane5FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTabbedPane5FocusGained
        CandidatoDao cdao = new CandidatoDao();

        try {
            candidato = cdao.pesquisarPorIdConcurso(concurso.getIdConcurso());
        } catch (SQLException ex) {
            ex.printStackTrace();
        }

        if(!candidato.isEmpty()){
            jListCandidatos.setListData(candidato.toArray());
        }
        

        /*DefaultListModel<Candidato> candiModel = new DefaultListModel<>();
         for (Candidato candi : candidato) {
         candiModel.addElement(candi);
         }
         jListCandidatos.setModel(candiModel);*/
    }//GEN-LAST:event_jTabbedPane5FocusGained

    private void jButtonAdicionaAtividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionaAtividadeActionPerformed
        Cronograma c = new Cronograma();
        if (jTextFieldAtividade.getText() != null
                && jTextFieldLocal.getText() != null
                && jDateChooserData.getDate() != null
                && jFormattedTextFieldHora.getText() != null) {

            //  try {
            DefaultTableModel dtm = (DefaultTableModel) jTableCronogramaAbertura.getModel();
            dtm.addRow(new Object[]{null,
                        jTextFieldAtividade.getText(),
                        Datas.getDate(jDateChooserData.getDate()),
                        jFormattedTextFieldHora.getText(),
                        jTextFieldLocal.getText()});
            
            
            c.setAtividade(jTextFieldAtividade.getText());
            c.setIdConcurso(concurso.getIdConcurso());
            c.setData(jDateChooserData.getDate());
            c.setHorario(Datas.convertStringToTime(jFormattedTextFieldHora.getText()));
            c.setLocal(jTextFieldLocal.getText());

        }

        jTextFieldAtividade.setText(null);
        jTextFieldLocal.setText(null);
        jDateChooserData.setDate(null);
        jFormattedTextFieldHora.setText(null);

        this.gravarCronograma(c);
        
        this.preecheTabelaCronograma();
    }//GEN-LAST:event_jButtonAdicionaAtividadeActionPerformed

//    private void gravarCronograma() {
//        for (int i = 0; i < jTableCronogramaAbertura.getRowCount(); i++) {
//
//
//            String atividade = (String) jTableCronogramaAbertura.getModel().getValueAt(i, 1);
//            Cronograma cronograma = new Cronograma();
//            cronograma.setAtividade(atividade);
//
//            Date data = Datas.getData((String) jTableCronogramaAbertura.getModel().getValueAt(i, 2));
//            //Date data = (Date) jTableCronogramaAbertura.getModel().getValueAt(i, 1);
//            cronograma.setData(data);
//
//            Date hora = Datas.convertStringToTime((String) jTableCronogramaAbertura.getModel().getValueAt(i, 3));
//            //Date hora = (Date) jTableCronogramaAbertura.getModel().getValueAt(i, 2);
//            cronograma.setHorario(hora);
//
//
//
//            String local = (String) jTableCronogramaAbertura.getModel().getValueAt(i, 4);
//            cronograma.setLocal(local);
//
//            cronograma.setIdConcurso(concurso.getIdConcurso());
//
//            CronogramaDao cronogramaDao = new CronogramaDao();
//            try {
//                System.out.println(cronograma.getAtividade());
//                System.out.println(cronograma.getConcurso().getIdConcurso());
//                System.out.println(cronograma.getData());
//                System.out.println(cronograma.getHorario());
//                cronogramaDao.inserir(cronograma);
//            } catch (SQLException ex) {
//                Logger.getLogger(janAberturaIntegracao.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//
//
//    }
    
    
    private void gravarCronograma(Cronograma c) {
            Cronograma crono = c;

            CronogramaDao cronogramaDao = new CronogramaDao();
            try {
                
                cronogramaDao.inserir(crono);
            } catch (SQLException ex) {
                Logger.getLogger(janAberturaIntegracao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }



    private void jButtonRemoveAtividadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveAtividadeActionPerformed
        int selected = jTableCronogramaAbertura.getSelectedRow();
        if (selected != -1) {
            Cronograma cronograma = new Cronograma();
            int id = (int)jTableCronogramaAbertura.getModel().getValueAt(selected, 0);
            CronogramaDao cd = new CronogramaDao();
            try {
                cronograma = (Cronograma)cd.pesquisarPorId(id);
                cd.excluir(cronograma);
            } catch (SQLException ex) {
                Logger.getLogger(janAberturaIntegracao.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um cronograma para ser excluido!");
        }
        
        this.preecheTabelaCronograma();

    }//GEN-LAST:event_jButtonRemoveAtividadeActionPerformed

    private void jButtonAdicionaCandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionaCandidatoActionPerformed
        int selected = jListCandidatos.getSelectedIndex();

        if (selected != -1) {
            candidatosAptos.add((Candidato) jListCandidatos.getSelectedValue());
            jListCandidatosPresentesAbertura.removeAll();
            jListCandidatosPresentesAbertura.setListData(candidatosAptos.toArray());

            candidato.remove(jListCandidatos.getSelectedValue());
            jListCandidatos.setListData(candidato.toArray());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um candidato");
        }


    }//GEN-LAST:event_jButtonAdicionaCandidatoActionPerformed

    private void jButtonAdicionaTodosCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionaTodosCandidatosActionPerformed
        for (int i = 0; i < candidato.size(); i++) {
            candidatosAptos.add(candidato.get(i));
        }
        candidato.clear();
        jListCandidatosPresentesAbertura.removeAll();
        jListCandidatosPresentesAbertura.setListData(candidatosAptos.toArray());
        jListCandidatos.setListData(candidato.toArray());

    }//GEN-LAST:event_jButtonAdicionaTodosCandidatosActionPerformed

    private void jButtonRemoveCandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveCandidatoActionPerformed
        int selected = jListCandidatosPresentesAbertura.getSelectedIndex();

        if (selected != -1) {
            candidato.add((Candidato) jListCandidatosPresentesAbertura.getSelectedValue());
            jListCandidatos.removeAll();
            jListCandidatos.setListData(candidato.toArray());

            candidatosAptos.remove(jListCandidatosPresentesAbertura.getSelectedValue());
            jListCandidatosPresentesAbertura.setListData(candidatosAptos.toArray());
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecione um candidato");
        }
    }//GEN-LAST:event_jButtonRemoveCandidatoActionPerformed

    private void jButtonRemoveTodosCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveTodosCandidatosActionPerformed
        for (int i = 0; i < candidatosAptos.size(); i++) {
            candidato.add(candidatosAptos.get(i));
        }
        candidatosAptos.clear();
        jListCandidatos.removeAll();
        jListCandidatos.setListData(candidato.toArray());
        jListCandidatosPresentesAbertura.setListData(candidatosAptos.toArray());
    }//GEN-LAST:event_jButtonRemoveTodosCandidatosActionPerformed

    private void salvaDadosGerais() {
        if (abertura == null) {
            abertura = new Abertura();
//            AberturaDao aberturaDao = new AberturaDao();
//            try {
//                aberturaDao.inserir(abertura);
//            } catch (SQLException ex) {
//                ex.printStackTrace();
//            }
        }
        abertura.setHoraInicio(Datas.convertStringToTime(jTextFieldHoraInstalacao.getText()));
        abertura.setLocal(jTextFieldLocalSessao.getText());
        abertura.setPortaria(jTextPortariaNomeacao.getText());
        abertura.setEmissor(jTextFieldEmissorPortaria.getText());
        abertura.setIdConcurso(concurso.getIdConcurso());
        /*concurso.setMinisterio(jTextFieldMinisterio.getText());
         concurso.setInstituicao(jTextFieldInstituicao.getText());
         concurso.setCampus((Campus) jComboBoxCampus.getSelectedItem());
         concurso.setArea(jTextFieldArea.getText());
         concurso.setEdital(jTextFieldEdital.getText());
         concurso.setDataInicio(jDateChooserDataInicio.getDate());
         concurso.setClasseConcurso((ClasseConcurso) jComboBoxClasse.getSelectedItem());
         */
        /*Set<ConstraintViolation<Concurso>> constraintViolations = validator.validate(concurso);
         if (constraintViolations.size() > 0) {
         for (ConstraintViolation<Concurso> constraintViolation : constraintViolations) {
         System.out.println("O atributo " + constraintViolation.getPropertyPath() + " " + constraintViolation.getMessage());
         JOptionPane.showMessageDialog(this, "O campo " + constraintViolation.getPropertyPath() + " " + constraintViolation.getMessage(), "", JOptionPane.ERROR_MESSAGE);
         }
         } else {*/
        AberturaDao aberturaDao = new AberturaDao();
        try {
            if (abertura.getIdAbertura() == null) {
                aberturaDao.inserir(abertura);
            } else {
                aberturaDao.alterar(abertura);
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(janAberturaIntegracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(janAberturaIntegracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(janAberturaIntegracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(janAberturaIntegracao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new janAberturaIntegracao().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CriarAtaAbertura;
    private javax.swing.JLabel EmissorPortaria;
    private javax.swing.JLabel LocalSessao;
    private javax.swing.JLabel PortariaNomeacao;
    private javax.swing.JLabel horadeinicio;
    private javax.swing.JLabel horadeinicio2;
    private javax.swing.JButton jButtonAdicionaAtividade;
    private javax.swing.JButton jButtonAdicionaCandidato;
    private javax.swing.JButton jButtonAdicionaTodosCandidatos;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCriarAta;
    private javax.swing.JButton jButtonCronograma;
    private javax.swing.JButton jButtonGravar;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonRemoveAtividade;
    private javax.swing.JButton jButtonRemoveCandidato;
    private javax.swing.JButton jButtonRemoveTodosCandidatos;
    private javax.swing.JButton jButtonVoltar;
    private com.toedter.calendar.JDateChooser jDateChooserData;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFormattedTextField jFormattedTextFieldHora;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JList jListCandidatos;
    private javax.swing.JList jListCandidatosPresentesAbertura;
    private javax.swing.JPanel jPanelCandidato;
    private javax.swing.JPanel jPanelCronograma;
    private javax.swing.JPanel jPanelInstalacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTable jTableCronogramaAbertura;
    private javax.swing.JTextField jTextFieldAtividade;
    private javax.swing.JTextField jTextFieldEdital;
    private javax.swing.JTextField jTextFieldEmissorPortaria;
    private javax.swing.JTextField jTextFieldHoraInstalacao;
    private javax.swing.JTextField jTextFieldLocal;
    private javax.swing.JTextField jTextFieldLocalSessao;
    private javax.swing.JTextField jTextPortariaNomeacao;
    private javax.swing.JLabel marqueoscadidatos;
    private javax.swing.JLabel textoAjudaLocalSessao;
    private javax.swing.JLabel textoajudaPortaria;
    private javax.swing.JLabel textoajudaemissor;
    // End of variables declaration//GEN-END:variables
}
