package view;

import br.com.jdbc.ConnectionFactory;
import br.com.model.dao.CandidatoDao;
import br.com.model.dao.CriterioAvaliacaoDao;
import br.com.model.dao.ExaminadorDao;
import br.com.model.dao.PontoProvaEscritaDao;
import br.com.model.dao.ProvaEscritaDao;
import br.com.model.entity.Candidato;
import br.com.model.entity.Concurso;
import br.com.model.entity.CriterioAvaliacao;
import br.com.model.entity.Examinador;
import br.com.model.entity.PontoProvaEscrita;
import br.com.model.entity.ProvaEscrita;
import br.com.report.ReportUtils;
import java.io.InputStream;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import util.Datas;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Douglas F. Almeida
 */
public class janProvaEscrita extends javax.swing.JFrame {

    private List<Candidato> listCandidatos;
    private ProvaEscrita provaEscrita;
    private ProvaEscritaDao pdao;

    /**
     * Creates new form janNovoConc
     */
    public janProvaEscrita() {
        super("Configurações do Concurso");
        initComponents();
        this.provaEscrita = janMenu.CONCURSO.getProvaEscrita();
        this.pdao = new ProvaEscritaDao();

        if (this.provaEscrita == null) {
            this.provaEscrita = new ProvaEscrita();
            this.provaEscrita.setConcurso(janMenu.CONCURSO);
            this.provaEscrita.setPontoSorteado(new PontoProvaEscrita());
            try {
                this.pdao.inserir(this.provaEscrita);
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }

        this.carregarCandidatos();
        this.carregarExaminadores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jButtonProximo = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();
        jTabbedPane5 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListCandidatosConcurso = new javax.swing.JList();
        jScrollPane2 = new javax.swing.JScrollPane();
        jListCandidatosAptos = new javax.swing.JList();
        jButtonAdicionarCandidato = new javax.swing.JButton();
        jButtonAdicionarTodosCandidatos = new javax.swing.JButton();
        jButtonRemoverCandidato = new javax.swing.JButton();
        jButtonRemoverTodosCandidatos = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButtonGerarListaCandidatos = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListListaPontos = new javax.swing.JList();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldTextoPonto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jButtonAdicionarPonto = new javax.swing.JButton();
        jButtonRemoverPonto = new javax.swing.JButton();
        jButtonGerarRelacaoPontos = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        jListCriterios = new javax.swing.JList();
        jTextFieldTextoCriterio = new javax.swing.JTextField();
        jTextFieldCriterioPeso = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButtonAdicionarCriterio = new javax.swing.JButton();
        jButtonRemoverCriterio = new javax.swing.JButton();
        jButtonGerarRelCriterios = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jLabel9 = new javax.swing.JLabel();
        jFormattedTextFieldHoraSorteio = new javax.swing.JFormattedTextField();
        jLabel10 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel11 = new javax.swing.JLabel();
        jFormattedTextFieldHoraInicioProva = new javax.swing.JFormattedTextField();
        jLabel12 = new javax.swing.JLabel();
        jFormattedTextFieldHoraFimProva = new javax.swing.JFormattedTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldLocalRealizacao = new javax.swing.JTextField();
        jComboBoxPontos = new javax.swing.JComboBox();
        jButtonIniciarRealizacaoGerarAta = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLayeredPane6 = new javax.swing.JLayeredPane();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jListCandidatosPresentesLeitura = new javax.swing.JList();
        jTextFieldLocalLeitura = new javax.swing.JTextField();
        jTextFieldHoraInicioLeitura = new javax.swing.JTextField();
        jButtonGerarAtaLeitura = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jListCandidatosAptos2 = new javax.swing.JList();
        jLabel22 = new javax.swing.JLabel();
        jButtonAdicionarCadidatoPresenteLeitura = new javax.swing.JButton();
        jButtonAdicionarTodosCadidatosPresenteLeitura = new javax.swing.JButton();
        jButtonRemoverCadidatoPresenteLeitura = new javax.swing.JButton();
        jButtonRemoverTodosCadidatosPresenteLeitura = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLayeredPane7 = new javax.swing.JLayeredPane();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldHoraInicioJulgamento = new javax.swing.JTextField();
        jTextFieldLocalJulgamento = new javax.swing.JTextField();
        jButtonGerarAtaJulgamento = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLayeredPane9 = new javax.swing.JLayeredPane();
        jButtonGerarPlanilhaAvaliacao = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jListCandidatosPlanilha = new javax.swing.JList();
        jScrollPane8 = new javax.swing.JScrollPane();
        jListExaminadorPlanilha = new javax.swing.JList();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLayeredPane8 = new javax.swing.JLayeredPane();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jTextFieldHoraInicioDivulgacaoResultado = new javax.swing.JTextField();
        jTextFieldLocalDivulgacaoResultado = new javax.swing.JTextField();
        jButtonGerarAtaResultado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Prova Escrita");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Prova Escrita");
        jLabel1.setBounds(280, 10, 300, 29);
        jLayeredPane1.add(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonProximo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonProximo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/next.png"))); // NOI18N
        jButtonProximo.setMnemonic('p');
        jButtonProximo.setText("Próximo");
        jButtonProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProximoActionPerformed(evt);
            }
        });
        jButtonProximo.setBounds(630, 470, 130, 40);
        jLayeredPane1.add(jButtonProximo, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/cancel.png"))); // NOI18N
        jButtonCancelar.setMnemonic('c');
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jButtonCancelar.setBounds(500, 470, 130, 40);
        jLayeredPane1.add(jButtonCancelar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonVoltar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButtonVoltar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/back.png"))); // NOI18N
        jButtonVoltar.setMnemonic('v');
        jButtonVoltar.setText("Voltar");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });
        jButtonVoltar.setBounds(370, 470, 130, 40);
        jLayeredPane1.add(jButtonVoltar, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosConcurso.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jListCandidatosConcurso);

        jScrollPane1.setBounds(30, 70, 300, 240);
        jLayeredPane2.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosAptos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jListCandidatosAptos);

        jScrollPane2.setBounds(420, 70, 310, 240);
        jLayeredPane2.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarCandidato.setText(">");
        jButtonAdicionarCandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarCandidatoActionPerformed(evt);
            }
        });
        jButtonAdicionarCandidato.setBounds(350, 90, 50, 30);
        jLayeredPane2.add(jButtonAdicionarCandidato, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarTodosCandidatos.setText(">>");
        jButtonAdicionarTodosCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarTodosCandidatosActionPerformed(evt);
            }
        });
        jButtonAdicionarTodosCandidatos.setBounds(350, 130, 49, 30);
        jLayeredPane2.add(jButtonAdicionarTodosCandidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverCandidato.setText("<");
        jButtonRemoverCandidato.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverCandidatoActionPerformed(evt);
            }
        });
        jButtonRemoverCandidato.setBounds(350, 170, 50, 30);
        jLayeredPane2.add(jButtonRemoverCandidato, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverTodosCandidatos.setText("<<");
        jButtonRemoverTodosCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverTodosCandidatosActionPerformed(evt);
            }
        });
        jButtonRemoverTodosCandidatos.setBounds(350, 210, 49, 30);
        jLayeredPane2.add(jButtonRemoverTodosCandidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel2.setText("Selecione os candidadtos aptos a realização da prova escrita.");
        jLabel2.setBounds(30, 10, 710, 40);
        jLayeredPane2.add(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel3.setText("Candidatos do concurso:");
        jLabel3.setBounds(30, 50, 150, 14);
        jLayeredPane2.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel4.setText("Candidatos aptos a realização da prova:");
        jLabel4.setBounds(420, 50, 240, 14);
        jLayeredPane2.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarListaCandidatos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/rel.png"))); // NOI18N
        jButtonGerarListaCandidatos.setText("Gerar Lista de Candidatos Aptos");
        jButtonGerarListaCandidatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarListaCandidatosActionPerformed(evt);
            }
        });
        jButtonGerarListaCandidatos.setBounds(483, 330, 250, 30);
        jLayeredPane2.add(jButtonGerarListaCandidatos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Candidatos Aptos A Realização", jPanel1);

        jListListaPontos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jListListaPontos);

        jScrollPane3.setBounds(20, 90, 730, 230);
        jLayeredPane3.add(jScrollPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel5.setText("Lista de pontos para a prova escrita:");
        jLabel5.setBounds(20, 70, 210, 14);
        jLayeredPane3.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldTextoPonto.setBounds(130, 30, 430, 30);
        jLayeredPane3.add(jTextFieldTextoPonto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Ponto:");
        jLabel6.setBounds(90, 30, 40, 30);
        jLayeredPane3.add(jLabel6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/add.png"))); // NOI18N
        jButtonAdicionarPonto.setMnemonic('a');
        jButtonAdicionarPonto.setText("Adicionar");
        jButtonAdicionarPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarPontoActionPerformed(evt);
            }
        });
        jButtonAdicionarPonto.setBounds(570, 30, 120, 33);
        jLayeredPane3.add(jButtonAdicionarPonto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverPonto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/remove.png"))); // NOI18N
        jButtonRemoverPonto.setText("Remover");
        jButtonRemoverPonto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverPontoActionPerformed(evt);
            }
        });
        jButtonRemoverPonto.setBounds(620, 335, 130, 30);
        jLayeredPane3.add(jButtonRemoverPonto, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarRelacaoPontos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/rel.png"))); // NOI18N
        jButtonGerarRelacaoPontos.setText("Gerar Relação de Pontos");
        jButtonGerarRelacaoPontos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarRelacaoPontosActionPerformed(evt);
            }
        });
        jButtonGerarRelacaoPontos.setBounds(20, 335, 220, 30);
        jLayeredPane3.add(jButtonGerarRelacaoPontos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Pontos", jPanel2);

        jListCriterios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jListCriterios);

        jScrollPane4.setBounds(10, 110, 740, 210);
        jLayeredPane4.add(jScrollPane4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldTextoCriterio.setBounds(60, 20, 690, 30);
        jLayeredPane4.add(jTextFieldTextoCriterio, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldCriterioPeso.setBounds(60, 60, 40, 30);
        jLayeredPane4.add(jTextFieldCriterioPeso, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel7.setText("Peso:");
        jLabel7.setBounds(10, 60, 40, 30);
        jLayeredPane4.add(jLabel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel8.setText("Critério:");
        jLabel8.setBounds(10, 20, 50, 30);
        jLayeredPane4.add(jLabel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarCriterio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/add.png"))); // NOI18N
        jButtonAdicionarCriterio.setMnemonic('a');
        jButtonAdicionarCriterio.setText("Adicionar");
        jButtonAdicionarCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarCriterioActionPerformed(evt);
            }
        });
        jButtonAdicionarCriterio.setBounds(630, 60, 120, 30);
        jLayeredPane4.add(jButtonAdicionarCriterio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverCriterio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/remove.png"))); // NOI18N
        jButtonRemoverCriterio.setText("Remover");
        jButtonRemoverCriterio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoverCriterioActionPerformed(evt);
            }
        });
        jButtonRemoverCriterio.setBounds(630, 330, 120, 30);
        jLayeredPane4.add(jButtonRemoverCriterio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarRelCriterios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/rel.png"))); // NOI18N
        jButtonGerarRelCriterios.setText("Gerar Relação de Critérios");
        jButtonGerarRelCriterios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarRelCriteriosActionPerformed(evt);
            }
        });
        jButtonGerarRelCriterios.setBounds(10, 330, 220, 30);
        jLayeredPane4.add(jButtonGerarRelCriterios, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Critérios", jPanel3);

        jLabel9.setText("Ponto Sorteado:");
        jLabel9.setBounds(10, 40, 100, 30);
        jLayeredPane5.add(jLabel9, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFormattedTextFieldHoraSorteio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldHoraSorteio.setBounds(160, 80, 70, 30);
        jLayeredPane5.add(jFormattedTextFieldHoraSorteio, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel10.setText("Hora do Sorteio:");
        jLabel10.setBounds(10, 80, 110, 30);
        jLayeredPane5.add(jLabel10, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jSeparator2.setBounds(10, 140, 760, 20);
        jLayeredPane5.add(jSeparator2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel11.setText("Hora do Inicio da Prova:");
        jLabel11.setBounds(10, 170, 140, 30);
        jLayeredPane5.add(jLabel11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFormattedTextFieldHoraInicioProva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldHoraInicioProva.setBounds(160, 170, 70, 30);
        jLayeredPane5.add(jFormattedTextFieldHoraInicioProva, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel12.setText("Hora do Fim da Prova:");
        jLabel12.setBounds(10, 210, 130, 30);
        jLayeredPane5.add(jLabel12, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jFormattedTextFieldHoraFimProva.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getTimeInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldHoraFimProva.setBounds(160, 210, 70, 30);
        jLayeredPane5.add(jFormattedTextFieldHoraFimProva, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel13.setText("Local da Realização:");
        jLabel13.setBounds(10, 260, 130, 30);
        jLayeredPane5.add(jLabel13, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldLocalRealizacao.setBounds(160, 260, 350, 30);
        jLayeredPane5.add(jTextFieldLocalRealizacao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jComboBoxPontos.setBounds(160, 40, 560, 30);
        jLayeredPane5.add(jComboBoxPontos, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonIniciarRealizacaoGerarAta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/rel.png"))); // NOI18N
        jButtonIniciarRealizacaoGerarAta.setText("Iniciar Realização e Gerar Ata");
        jButtonIniciarRealizacaoGerarAta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIniciarRealizacaoGerarAtaActionPerformed(evt);
            }
        });
        jButtonIniciarRealizacaoGerarAta.setBounds(160, 320, 220, 30);
        jLayeredPane5.add(jButtonIniciarRealizacaoGerarAta, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 765, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLayeredPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 372, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLayeredPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Realização", jPanel4);

        jLabel14.setText("Local da Leitura:");
        jLabel14.setBounds(20, 70, 100, 30);
        jLayeredPane6.add(jLabel14, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel16.setText("Candidatos Presentes:");
        jLabel16.setBounds(430, 120, 150, 14);
        jLayeredPane6.add(jLabel16, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel17.setText("Hora de Início da Leitura:");
        jLabel17.setBounds(430, 70, 160, 30);
        jLayeredPane6.add(jLabel17, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosPresentesLeitura.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane5.setViewportView(jListCandidatosPresentesLeitura);

        jScrollPane5.setBounds(430, 140, 320, 150);
        jLayeredPane6.add(jScrollPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldLocalLeitura.setBounds(120, 70, 220, 30);
        jLayeredPane6.add(jTextFieldLocalLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextFieldHoraInicioLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHoraInicioLeituraActionPerformed(evt);
            }
        });
        jTextFieldHoraInicioLeitura.setBounds(580, 70, 80, 30);
        jLayeredPane6.add(jTextFieldHoraInicioLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarAtaLeitura.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/ataa.png"))); // NOI18N
        jButtonGerarAtaLeitura.setText("Gerar de Ata de Leitura");
        jButtonGerarAtaLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarAtaLeituraActionPerformed(evt);
            }
        });
        jButtonGerarAtaLeitura.setBounds(520, 320, 200, 30);
        jLayeredPane6.add(jButtonGerarAtaLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosAptos2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane6.setViewportView(jListCandidatosAptos2);

        jScrollPane6.setBounds(20, 140, 320, 150);
        jLayeredPane6.add(jScrollPane6, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel22.setText("Candidatos Aptos:");
        jLabel22.setBounds(20, 120, 110, 14);
        jLayeredPane6.add(jLabel22, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarCadidatoPresenteLeitura.setText(">");
        jButtonAdicionarCadidatoPresenteLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdicionarCadidatoPresenteLeituraActionPerformed(evt);
            }
        });
        jButtonAdicionarCadidatoPresenteLeitura.setBounds(360, 140, 50, 30);
        jLayeredPane6.add(jButtonAdicionarCadidatoPresenteLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonAdicionarTodosCadidatosPresenteLeitura.setText(">>");
        jButtonAdicionarTodosCadidatosPresenteLeitura.setBounds(360, 180, 50, 30);
        jLayeredPane6.add(jButtonAdicionarTodosCadidatosPresenteLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverCadidatoPresenteLeitura.setText("<");
        jButtonRemoverCadidatoPresenteLeitura.setBounds(360, 220, 50, 30);
        jLayeredPane6.add(jButtonRemoverCadidatoPresenteLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonRemoverTodosCadidatosPresenteLeitura.setText("<<");
        jButtonRemoverTodosCadidatosPresenteLeitura.setBounds(360, 260, 50, 30);
        jLayeredPane6.add(jButtonRemoverTodosCadidatosPresenteLeitura, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addComponent(jLabel15)
                .addContainerGap(697, Short.MAX_VALUE))
            .addComponent(jLayeredPane6, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLayeredPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane5.addTab("Leitura", jPanel5);

        jLabel18.setText("Local do Julgamento:");
        jLabel18.setBounds(120, 120, 170, 20);
        jLayeredPane7.add(jLabel18, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel19.setText("Horário Inicio do Julgamento:");
        jLabel19.setBounds(120, 150, 180, 20);
        jLayeredPane7.add(jLabel19, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldHoraInicioJulgamento.setBounds(300, 150, 70, 30);
        jLayeredPane7.add(jTextFieldHoraInicioJulgamento, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldLocalJulgamento.setBounds(300, 112, 280, 30);
        jLayeredPane7.add(jTextFieldLocalJulgamento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarAtaJulgamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/ataa.png"))); // NOI18N
        jButtonGerarAtaJulgamento.setText("Gerar Ata de Julgamento");
        jButtonGerarAtaJulgamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarAtaJulgamentoActionPerformed(evt);
            }
        });
        jButtonGerarAtaJulgamento.setBounds(380, 150, 200, 30);
        jLayeredPane7.add(jButtonGerarAtaJulgamento, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Julgamento", jPanel6);

        jButtonGerarPlanilhaAvaliacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/rel.png"))); // NOI18N
        jButtonGerarPlanilhaAvaliacao.setText("Gerar Planilha para Avaliação");
        jButtonGerarPlanilhaAvaliacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarPlanilhaAvaliacaoActionPerformed(evt);
            }
        });
        jButtonGerarPlanilhaAvaliacao.setBounds(450, 300, 280, 40);
        jLayeredPane9.add(jButtonGerarPlanilhaAvaliacao, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListCandidatosPlanilha.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane7.setViewportView(jListCandidatosPlanilha);

        jScrollPane7.setBounds(10, 40, 340, 230);
        jLayeredPane9.add(jScrollPane7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jListExaminadorPlanilha.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane8.setViewportView(jListExaminadorPlanilha);

        jScrollPane8.setBounds(390, 40, 320, 230);
        jLayeredPane9.add(jScrollPane8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel23.setText("Candidato");
        jLabel23.setBounds(10, 14, 100, 20);
        jLayeredPane9.add(jLabel23, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel24.setText("Examinador");
        jLabel24.setBounds(390, 10, 90, 30);
        jLayeredPane9.add(jLabel24, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 745, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane5.addTab("Planilhas de Avaliação", jPanel8);

        jLabel20.setText("Local de Divulgação do Resultado:");
        jLabel20.setBounds(81, 120, 200, 14);
        jLayeredPane8.add(jLabel20, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setText("Horário de Divulgação do Resultado:");
        jLabel21.setBounds(80, 150, 220, 14);
        jLayeredPane8.add(jLabel21, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldHoraInicioDivulgacaoResultado.setBounds(300, 150, 70, 30);
        jLayeredPane8.add(jTextFieldHoraInicioDivulgacaoResultado, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jTextFieldLocalDivulgacaoResultado.setBounds(300, 112, 280, 30);
        jLayeredPane8.add(jTextFieldLocalDivulgacaoResultado, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jButtonGerarAtaResultado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icones/ataa.png"))); // NOI18N
        jButtonGerarAtaResultado.setText("Gerar Ata do Resultado");
        jButtonGerarAtaResultado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGerarAtaResultadoActionPerformed(evt);
            }
        });
        jButtonGerarAtaResultado.setBounds(380, 150, 200, 30);
        jLayeredPane8.add(jButtonGerarAtaResultado, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 765, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );

        jTabbedPane5.addTab("Resultado", jPanel7);

        jTabbedPane5.setBounds(0, 50, 770, 400);
        jLayeredPane1.add(jTabbedPane5, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 775, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 533, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-791)/2, (screenSize.height-571)/2, 791, 571);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProximoActionPerformed

        // TODO add your handling code here:
        int nextTab = jTabbedPane5.getSelectedIndex() + 1;
        if (nextTab < jTabbedPane5.getTabCount()) {
            jTabbedPane5.setSelectedIndex(nextTab);
        }

    }//GEN-LAST:event_jButtonProximoActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        // TODO add your handling code here:
        int nextTab = jTabbedPane5.getSelectedIndex() - 1;
        if (nextTab >= 0) {
            jTabbedPane5.setSelectedIndex(nextTab);
        }
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonAdicionarCandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarCandidatoActionPerformed
        // TODO add your handling code here:
        int selected = this.jListCandidatosConcurso.getSelectedIndex();
        if (selected != -1) {
            Candidato c = this.listCandidatos.get(selected);
            this.provaEscrita.adicionarCandidatoApto(c);
            this.listCandidatos.remove(c);
            this.jListCandidatosConcurso.setListData(this.listCandidatos.toArray());
            this.jListCandidatosAptos.setListData(this.provaEscrita.getCandidatosAptosProva().toArray());
            this.jListCandidatosAptos2.setListData(this.provaEscrita.getCandidatosAptosProva().toArray());
            try {
                this.pdao.alterar(this.provaEscrita);
            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um candidato!", null, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonAdicionarCandidatoActionPerformed

    private void jButtonAdicionarTodosCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarTodosCandidatosActionPerformed
        // TODO add your handling code here:
        ArrayList<Candidato> vazio = new ArrayList();
        this.provaEscrita.setCandidatosAptosProva((ArrayList<Candidato>) this.listCandidatos);
        this.jListCandidatosAptos.setListData(this.listCandidatos.toArray());
        this.jListCandidatosAptos2.setListData(this.listCandidatos.toArray());
        this.jListCandidatosConcurso.setListData(vazio.toArray());
        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAdicionarTodosCandidatosActionPerformed

    private void jButtonAdicionarPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarPontoActionPerformed
        // TODO add your handling code here:
        String ponto = this.jTextFieldTextoPonto.getText();
        if (ponto.isEmpty() == false) {
            PontoProvaEscritaDao pdao = new PontoProvaEscritaDao();
            PontoProvaEscrita p = new PontoProvaEscrita();
            p.setDescricao(ponto);
            p.setProvaEscrita(this.provaEscrita);
            try {
                pdao.inserir(p);
                jTextFieldTextoPonto.setText("");
            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }

            this.provaEscrita.adicionarPonto(p);
            this.jListListaPontos.setListData(this.provaEscrita.getPontos().toArray());
            DefaultComboBoxModel lista = (DefaultComboBoxModel) this.jComboBoxPontos.getModel();
            lista.removeAllElements();
            for (int i = 0; i < this.provaEscrita.getPontos().size(); i++) {
                lista.addElement(this.provaEscrita.getPontos().get(i));
            }
        } else {
            JOptionPane.showMessageDialog(this, "Escreva o ponto!", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAdicionarPontoActionPerformed

    private void jButtonRemoverPontoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverPontoActionPerformed
        // TODO add your handling code here:
        int selected = this.jListListaPontos.getSelectedIndex();
        if (selected != -1) {
            int opcao = JOptionPane.showConfirmDialog(rootPane, "Você tem certeza que quer excluir o ponto selecionado?");
            if (opcao == 0) {
                PontoProvaEscrita p = (PontoProvaEscrita) this.jListListaPontos.getSelectedValue();
                PontoProvaEscritaDao pdao = new PontoProvaEscritaDao();
                try {
                    pdao.excluir(p);
                } catch (SQLException ex) {
                    Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.provaEscrita.removerPonto(p);
                this.jListListaPontos.setListData(this.provaEscrita.getPontos().toArray());
                DefaultComboBoxModel lista = (DefaultComboBoxModel) this.jComboBoxPontos.getModel();
                lista.removeAllElements();
                for (int i = 0; i < this.provaEscrita.getPontos().size(); i++) {
                    lista.addElement(this.provaEscrita.getPontos().get(i));
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um ponto!", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRemoverPontoActionPerformed

    private void jButtonAdicionarCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarCriterioActionPerformed
        // TODO add your handling code here:
        if (this.jTextFieldTextoCriterio.getText().isEmpty() == false && this.jTextFieldCriterioPeso.getText().isEmpty() == false) {


            if ((this.provaEscrita.getSomaPontosCriterioAvaliacao() + Float.parseFloat(this.jTextFieldCriterioPeso.getText())) > 10) {
                JOptionPane.showMessageDialog(this, "A soma do número de pontos não pode ser superior a 10 pontos!", null, JOptionPane.ERROR_MESSAGE);
                return;
            }

            CriterioAvaliacao c = new CriterioAvaliacao();
            c.setCriterio(this.jTextFieldTextoCriterio.getText());
            c.setPeso(Float.parseFloat(this.jTextFieldCriterioPeso.getText()));
            c.setIdProvaEscrita(this.provaEscrita.getIdProvaEscrita());
            c.setProvaEscrita(this.provaEscrita);

            CriterioAvaliacaoDao cdao = new CriterioAvaliacaoDao();
            try {
                cdao.inserir(c);

            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }
            this.provaEscrita.adicionarCriterioAvaliacao(c);
            this.jListCriterios.setListData(this.provaEscrita.getCriterios().toArray());

        } else {
            JOptionPane.showMessageDialog(this, "Escreva o critério e peso!", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAdicionarCriterioActionPerformed

    private void jButtonRemoverCriterioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverCriterioActionPerformed
        // TODO add your handling code here:
        int selected = this.jListCriterios.getSelectedIndex();
        if (selected != -1) {
            int opcao = JOptionPane.showConfirmDialog(rootPane, "Você tem certeza deseja excluir o critério selecionado?");
            if (opcao == 0) {
                CriterioAvaliacao c = (CriterioAvaliacao) this.jListCriterios.getSelectedValue();
                CriterioAvaliacaoDao cdao = new CriterioAvaliacaoDao();
                try {
                    cdao.excluir(c);
                } catch (SQLException ex) {
                    Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
                }
                this.provaEscrita.removerCriterioAvaliacao(c);
                this.jListCriterios.setListData(this.provaEscrita.getCriterios().toArray());
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um critério!", null, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonRemoverCriterioActionPerformed

    private void jButtonGerarListaCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarListaCandidatosActionPerformed
        // TODO add your handling code here:
        jButtonGerarListaCandidatos.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportCandidatosAptosProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            // abre o relatório
            ReportUtils.openReport("Lista de Presença - Prova Escrita", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        jButtonGerarListaCandidatos.setEnabled(true);
    }//GEN-LAST:event_jButtonGerarListaCandidatosActionPerformed

    private void jButtonGerarRelacaoPontosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarRelacaoPontosActionPerformed
        // TODO add your handling code here:
        jButtonGerarRelacaoPontos.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportListaPontosProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Lista de Pontos", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        jButtonGerarRelacaoPontos.setEnabled(true);
    }//GEN-LAST:event_jButtonGerarRelacaoPontosActionPerformed

    private void jButtonRemoverCandidatoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverCandidatoActionPerformed
        int selected = this.jListCandidatosAptos.getSelectedIndex();
        if (selected != -1) {
            Candidato c = this.provaEscrita.getCandidatosAptosProva().get(selected);
            this.provaEscrita.removerCandidatoApto(c);
            this.listCandidatos.add(c);
            this.jListCandidatosConcurso.setListData(this.listCandidatos.toArray());
            this.jListCandidatosAptos.setListData(this.provaEscrita.getCandidatosAptosProva().toArray());
            this.jListCandidatosAptos2.setListData(this.provaEscrita.getCandidatosAptosProva().toArray());
            try {
                this.pdao.alterar(this.provaEscrita);
            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um candidato!", null, JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButtonRemoverCandidatoActionPerformed

    private void jButtonRemoverTodosCandidatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverTodosCandidatosActionPerformed
        try {
            this.carregarCandidatos();
            this.provaEscrita.setCandidatosAptosProva(new ArrayList<Candidato>());
            this.jListCandidatosAptos.setListData(new ArrayList<Candidato>().toArray());
            this.jListCandidatosAptos2.setListData(new ArrayList<Candidato>().toArray());

            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonRemoverTodosCandidatosActionPerformed

    private void jButtonGerarRelCriteriosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarRelCriteriosActionPerformed
        // TODO add your handling code here:

        if (this.provaEscrita.getSomaPontosCriterioAvaliacao() != 10) {
            JOptionPane.showMessageDialog(this, "A soma do número de pontos deve ser igual a 10 pontos!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        jButtonGerarRelacaoPontos.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportListaCriteriosProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Lista de Critérios", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        jButtonGerarRelacaoPontos.setEnabled(true);
    }//GEN-LAST:event_jButtonGerarRelCriteriosActionPerformed

    private void jButtonIniciarRealizacaoGerarAtaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIniciarRealizacaoGerarAtaActionPerformed
        // TODO add your handling code here:
        if (this.jFormattedTextFieldHoraSorteio.getText().equalsIgnoreCase("") == true
                || this.jFormattedTextFieldHoraSorteio.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora do sorteio do ponto!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jFormattedTextFieldHoraInicioProva.getText().equalsIgnoreCase("") == true
                || this.jFormattedTextFieldHoraInicioProva.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora de inicio da prova!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jFormattedTextFieldHoraFimProva.getText().equalsIgnoreCase("") == true
                || this.jFormattedTextFieldHoraFimProva.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora de dfim da prova!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jTextFieldLocalRealizacao.getText().equalsIgnoreCase("") == true
                || this.jTextFieldLocalRealizacao.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe o local da realização da prova!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (this.jComboBoxPontos.getModel().getSize() <= 0) {
            JOptionPane.showMessageDialog(this, "Você deve criar os pontos antes de inciar a realização do concurso", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        this.provaEscrita.setPontoSorteado((PontoProvaEscrita) this.jComboBoxPontos.getSelectedItem());
        this.provaEscrita.setHoraPontoSorteado(Datas.convertStringToTime(this.jFormattedTextFieldHoraSorteio.getText()));
        this.provaEscrita.setHoraInicioProva(Datas.convertStringToTime(this.jFormattedTextFieldHoraInicioProva.getText()));
        this.provaEscrita.setHoraFimProva(Datas.convertStringToTime(this.jFormattedTextFieldHoraFimProva.getText()));
        this.provaEscrita.setLocalRealizacao(this.jTextFieldLocalRealizacao.getText());

        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }


        this.jButtonIniciarRealizacaoGerarAta.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportAtaRealizacaoProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Ata de Realização", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        this.jButtonIniciarRealizacaoGerarAta.setEnabled(true);

    }//GEN-LAST:event_jButtonIniciarRealizacaoGerarAtaActionPerformed

    private void jButtonAdicionarCadidatoPresenteLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarCadidatoPresenteLeituraActionPerformed
        // TODO add your handling code here:
        int selected = this.jListCandidatosAptos2.getSelectedIndex();
        if (this.jListCandidatosAptos2.getSelectedValue() != null) {
            Candidato c = (Candidato) this.jListCandidatosAptos2.getSelectedValue();
            this.provaEscrita.adicionarCandidatoAptoLeitura(c);
            this.jListCandidatosPresentesLeitura.setListData(this.provaEscrita.getCandidatosAptosLeitura().toArray());
            try {
                this.pdao.alterar(this.provaEscrita);
            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um candidato!", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAdicionarCadidatoPresenteLeituraActionPerformed

    private void jTextFieldHoraInicioLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHoraInicioLeituraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldHoraInicioLeituraActionPerformed

    private void jButtonAdicionarTodosCadidatosPresenteLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdicionarTodosCadidatosPresenteLeituraActionPerformed
        // TODO add your handling code here:
        this.provaEscrita.setCandidatosAptosLeitura(this.provaEscrita.getCandidatosAptosProva());
        this.jListCandidatosPresentesLeitura.setListData(this.provaEscrita.getCandidatosAptosLeitura().toArray());
        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonAdicionarTodosCadidatosPresenteLeituraActionPerformed

    private void jButtonRemoverTodosCadidatosPresenteLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverTodosCadidatosPresenteLeituraActionPerformed
        // TODO add your handling code here:
        this.provaEscrita.setCandidatosAptosLeitura(new ArrayList<Candidato>());
        this.jListCandidatosPresentesLeitura.setListData(this.provaEscrita.getCandidatosAptosLeitura().toArray());
        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonRemoverTodosCadidatosPresenteLeituraActionPerformed

    private void jButtonRemoverCadidatoPresenteLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoverCadidatoPresenteLeituraActionPerformed
        // TODO add your handling code here:
        int selected = this.jListCandidatosPresentesLeitura.getSelectedIndex();
        if (this.jListCandidatosPresentesLeitura.getSelectedValue() != null) {
            Candidato c = (Candidato) this.jListCandidatosPresentesLeitura.getSelectedValue();
            this.provaEscrita.removerCandidatoAptoLeitura(c);
            this.jListCandidatosPresentesLeitura.setListData(this.provaEscrita.getCandidatosAptosLeitura().toArray());
            try {
                this.pdao.alterar(this.provaEscrita);
            } catch (SQLException ex) {
                Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um candidato!", null, JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRemoverCadidatoPresenteLeituraActionPerformed

    private void jButtonGerarAtaLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarAtaLeituraActionPerformed
        // TODO add your handling code here:

        if (this.jTextFieldLocalLeitura.getText().equalsIgnoreCase("") == true
                || this.jTextFieldLocalLeitura.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe o local da leitura!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jTextFieldHoraInicioLeitura.getText().equalsIgnoreCase("") == true
                || this.jTextFieldHoraInicioLeitura.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora de inicio da leitura!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        this.provaEscrita.setHoraInicioLeitura(Datas.convertStringToTime(this.jTextFieldHoraInicioLeitura.getText()));
        this.provaEscrita.setLocalLeitura(this.jTextFieldLocalLeitura.getText());

        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }


        this.jButtonGerarAtaLeitura.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportAtaLeituraProva.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Ata de Leitura", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        this.jButtonGerarAtaLeitura.setEnabled(true);




    }//GEN-LAST:event_jButtonGerarAtaLeituraActionPerformed

    private void jButtonGerarAtaJulgamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarAtaJulgamentoActionPerformed
        // TODO add your handling code here:

        if (this.jTextFieldLocalJulgamento.getText().equalsIgnoreCase("") == true
                || this.jTextFieldLocalJulgamento.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe o local da julgamento!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jTextFieldHoraInicioJulgamento.getText().equalsIgnoreCase("") == true
                || this.jTextFieldHoraInicioJulgamento.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora de inicio da julgamento!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        this.provaEscrita.setHoraInicioJulgamento(Datas.convertStringToTime(this.jTextFieldHoraInicioJulgamento.getText()));
        this.provaEscrita.setLocalJulgamento(this.jTextFieldLocalJulgamento.getText());

        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }


        this.jButtonGerarAtaJulgamento.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportAtaJulgamentoProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Ata de Julgamento", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        this.jButtonGerarAtaJulgamento.setEnabled(true);

    }//GEN-LAST:event_jButtonGerarAtaJulgamentoActionPerformed

    private void jButtonGerarAtaResultadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarAtaResultadoActionPerformed
        // TODO add your handling code here:

        if (this.jTextFieldLocalDivulgacaoResultado.getText().equalsIgnoreCase("") == true
                || this.jTextFieldLocalDivulgacaoResultado.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe o local do resultado!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jTextFieldHoraInicioDivulgacaoResultado.getText().equalsIgnoreCase("") == true
                || this.jTextFieldHoraInicioDivulgacaoResultado.getText() == null) {
            JOptionPane.showMessageDialog(this, "Informe a hora de inicio do resultado!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        this.provaEscrita.setHoraInicioResultado(Datas.convertStringToTime(this.jTextFieldHoraInicioDivulgacaoResultado.getText()));
        this.provaEscrita.setLocalResultado(this.jTextFieldLocalDivulgacaoResultado.getText());

        try {
            this.pdao.alterar(this.provaEscrita);
        } catch (SQLException ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }


        this.jButtonGerarAtaResultado.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportAtaResultadoProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            // abre o relatório
            ReportUtils.openReport("Ata de Resultado", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        this.jButtonGerarAtaResultado.setEnabled(true);
    }//GEN-LAST:event_jButtonGerarAtaResultadoActionPerformed

    private void jButtonGerarPlanilhaAvaliacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGerarPlanilhaAvaliacaoActionPerformed
        // TODO add your handling code here:

        if (this.jListCandidatosPlanilha.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um candidato!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (this.jListExaminadorPlanilha.getSelectedValue() == null) {
            JOptionPane.showMessageDialog(this, "Selecione um examinador!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }


        if (this.jListCriterios.getModel().getSize() <= 0) {
            JOptionPane.showMessageDialog(this, "Cadastre pelo menos um critério de avaliação!", null, JOptionPane.ERROR_MESSAGE);
            return;
        }

        Candidato c = (Candidato) this.jListCandidatosPlanilha.getSelectedValue();
        Examinador e = (Examinador) this.jListExaminadorPlanilha.getSelectedValue();
        this.jButtonGerarPlanilhaAvaliacao.setEnabled(false);
        try {
            InputStream inputStream = getClass().getResourceAsStream("../br/com/report/reportPlanilhasAvaliacaoProvaEscrita.jasper");
            // mapa de parâmetros do relatório (ainda vamos aprender a usar)
            Map parametros = new HashMap();
            parametros.put("id_prova_escrita", this.provaEscrita.getIdProvaEscrita());
            String data = Datas.getDataExtenso(new Date(System.currentTimeMillis()));
            parametros.put("data", data);
            parametros.put("candidato", c.getNome());
            parametros.put("examinador", e.getPessoa().getNome());
            // abre o relatório
            ReportUtils.openReport("Planilhas para Avaliação", inputStream, parametros, ConnectionFactory.getConnection());
        } catch (JRException exc) {
            exc.printStackTrace();
        }
        this.jButtonGerarPlanilhaAvaliacao.setEnabled(true);


    }//GEN-LAST:event_jButtonGerarPlanilhaAvaliacaoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(janProvaEscrita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(janProvaEscrita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(janProvaEscrita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(janProvaEscrita.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new janProvaEscrita().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdicionarCadidatoPresenteLeitura;
    private javax.swing.JButton jButtonAdicionarCandidato;
    private javax.swing.JButton jButtonAdicionarCriterio;
    private javax.swing.JButton jButtonAdicionarPonto;
    private javax.swing.JButton jButtonAdicionarTodosCadidatosPresenteLeitura;
    private javax.swing.JButton jButtonAdicionarTodosCandidatos;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGerarAtaJulgamento;
    private javax.swing.JButton jButtonGerarAtaLeitura;
    private javax.swing.JButton jButtonGerarAtaResultado;
    private javax.swing.JButton jButtonGerarListaCandidatos;
    private javax.swing.JButton jButtonGerarPlanilhaAvaliacao;
    private javax.swing.JButton jButtonGerarRelCriterios;
    private javax.swing.JButton jButtonGerarRelacaoPontos;
    private javax.swing.JButton jButtonIniciarRealizacaoGerarAta;
    private javax.swing.JButton jButtonProximo;
    private javax.swing.JButton jButtonRemoverCadidatoPresenteLeitura;
    private javax.swing.JButton jButtonRemoverCandidato;
    private javax.swing.JButton jButtonRemoverCriterio;
    private javax.swing.JButton jButtonRemoverPonto;
    private javax.swing.JButton jButtonRemoverTodosCadidatosPresenteLeitura;
    private javax.swing.JButton jButtonRemoverTodosCandidatos;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JComboBox jComboBoxPontos;
    private javax.swing.JFormattedTextField jFormattedTextFieldHoraFimProva;
    private javax.swing.JFormattedTextField jFormattedTextFieldHoraInicioProva;
    private javax.swing.JFormattedTextField jFormattedTextFieldHoraSorteio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JLayeredPane jLayeredPane6;
    private javax.swing.JLayeredPane jLayeredPane7;
    private javax.swing.JLayeredPane jLayeredPane8;
    private javax.swing.JLayeredPane jLayeredPane9;
    private javax.swing.JList jListCandidatosAptos;
    private javax.swing.JList jListCandidatosAptos2;
    private javax.swing.JList jListCandidatosConcurso;
    private javax.swing.JList jListCandidatosPlanilha;
    private javax.swing.JList jListCandidatosPresentesLeitura;
    private javax.swing.JList jListCriterios;
    private javax.swing.JList jListExaminadorPlanilha;
    private javax.swing.JList jListListaPontos;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane5;
    private javax.swing.JTextField jTextFieldCriterioPeso;
    private javax.swing.JTextField jTextFieldHoraInicioDivulgacaoResultado;
    private javax.swing.JTextField jTextFieldHoraInicioJulgamento;
    private javax.swing.JTextField jTextFieldHoraInicioLeitura;
    private javax.swing.JTextField jTextFieldLocalDivulgacaoResultado;
    private javax.swing.JTextField jTextFieldLocalJulgamento;
    private javax.swing.JTextField jTextFieldLocalLeitura;
    private javax.swing.JTextField jTextFieldLocalRealizacao;
    private javax.swing.JTextField jTextFieldTextoCriterio;
    private javax.swing.JTextField jTextFieldTextoPonto;
    // End of variables declaration//GEN-END:variables

    private void carregarCandidatos() {
        CandidatoDao c = new CandidatoDao();
        try {
            this.listCandidatos = c.pesquisarPorIdConcurso(janMenu.CONCURSO.getIdConcurso());
            this.jListCandidatosConcurso.removeAll();
            this.jListCandidatosConcurso.setListData(listCandidatos.toArray());
            this.jListCandidatosPlanilha.setListData(listCandidatos.toArray());
        } catch (Exception ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void carregarExaminadores() {
        ExaminadorDao c = new ExaminadorDao();
        try {
            this.jListExaminadorPlanilha.setListData(c.pesquisarTodos().toArray());
        } catch (Exception ex) {
            Logger.getLogger(janProvaEscrita.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
